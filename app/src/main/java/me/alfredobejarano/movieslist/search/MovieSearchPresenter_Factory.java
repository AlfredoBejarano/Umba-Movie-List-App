// Generated by Dagger (https://dagger.dev).
package me.alfredobejarano.movieslist.search;

import dagger.internal.Factory;
import javax.inject.Provider;
import me.alfredobejarano.movieslist.domain.SearchMovieByTitleUseCase;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MovieSearchPresenter_Factory implements Factory<MovieSearchPresenter> {
  private final Provider<SearchMovieByTitleUseCase> searchMovieByTitleUseCaseProvider;

  public MovieSearchPresenter_Factory(
      Provider<SearchMovieByTitleUseCase> searchMovieByTitleUseCaseProvider) {
    this.searchMovieByTitleUseCaseProvider = searchMovieByTitleUseCaseProvider;
  }

  @Override
  public MovieSearchPresenter get() {
    return newInstance(searchMovieByTitleUseCaseProvider.get());
  }

  public static MovieSearchPresenter_Factory create(
      Provider<SearchMovieByTitleUseCase> searchMovieByTitleUseCaseProvider) {
    return new MovieSearchPresenter_Factory(searchMovieByTitleUseCaseProvider);
  }

  public static MovieSearchPresenter newInstance(
      SearchMovieByTitleUseCase searchMovieByTitleUseCase) {
    return new MovieSearchPresenter(searchMovieByTitleUseCase);
  }
}
